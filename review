1. Quản lý bộ nhớ trong Java với Heap Space vs Stack:
https://gpcoder.com/2160-quan-ly-bo-nho-trong-java-voi-heap-space-vs-stack/

2. Dùng Interface, Abstract:
Abstract BaseActivity để set font, ngôn ngữ, loading
https://kipalog.com/posts/Ba-n-thu--c-su---da--bie--t-khi-na-o-du-ng-Interface-khi-na-o-du-ng-Abstract

3. Cơ chế làm việc của HashMap:
https://techmaster.vn/posts/34068/co-che-cua-hashmap

4. Glide vs Picasso:
- Glide thực hiện trong Activity/Fragment là: việc tải ảnh sẽ được tích hợp cùng với vòng đời của Activity/Fragment,
ví dụ: Glide sẽ tạm dừng tải ảnh khi Activity/Fragment đang ở trạng thái Paused, và nó sẽ tự động tiếp tục khi Activity/Fragment 
quay trở lại trạng thái Resumed
- Glide mượt hơn, chiếm ít bộ nhớ hơn (Glide có chất lượng kém hơn so với Picasso. Glide định dạng Bitmap mặc định có định dạng RGB_565,
định dạng này sẽ chỉ chiếm 50% bộ nhớ so với định dạng ARGB_8888)
- Picasso tải hình ảnh kích thước đầy đủ. Glide tải ảnh chính xác kích thước của ImageView. 
- Glide cache các kích thước ImageView,Picasso lại cache một kích thước đầy đủ.
(Khi load cùng 1 link ảnh vào 2 ImageView có size khác nhau: Glide tải 2 lần, cache 2 ảnh, Picass tải 1 lần. cache 1 ảnh)
- Glide tải được ảnh GIF, Hỗ trợ nhiều Animation khi load ảnh. Picass so chỉ có fade-in

5. Cách Glide hoạt động (cache,..)
https://techblog.vn/cach-thu-vien-anh-glide-hoat-dong-trong-android

6. Context:
https://techblog.vn/android-context-la-gi-su-dung-sao-cho-dung
https://vntalking.com/context-trong-android-la-gi.html
Context thể hiện trạng thái hiện tại của application/object. Context là cầu nối giữa các thành phần. Bạn sử dụng nó để giao tiếp giữa các thành phần,
khởi tạo các thành phần và truy cập các thành phần.( Các thành phần này được định nghĩa trong tệp Manifest,
nó bao gồm phần chính là Activity (UI), Service (Background), 
BroadcastReceiver (Action), ContentProvider (Data), và các Resources (images, strings...).)

7. Bitmap:
https://viblo.asia/p/xu-ly-bitmap-trong-android-1VgZv1pRKAw

8. Design Pattern
https://viblo.asia/p/android-nhung-design-pattern-thong-dung-trong-android-RQqKLvJ6l7z
https://kipalog.com/posts/Nhung-Design-Pattern-thuong-dung-trong-Android

9. MVC, MVP, MVVM
https://techblog.vn/architecture-patterns-mvc-mvp-va-mvvm
https://giai-ma.blogspot.com/2018/10/design-pattern-mvc-mvp-va-mvvm-la-gi.html

10. Fragment
https://viblo.asia/p/android-co-the-ban-chua-biet-fragment-eW65GxXLKDO
https://vntalking.com/android-fragment-lifecycle-nhung-dieu-chua-ke.html

11. Service
https://viblo.asia/p/tong-quan-service-trong-android-maGK7M8elj2

12. OOP
https://techtalk.vn/4-tinh-chat-cua-lap-trinh-huong-doi-tuong-trong-java.html
https://toidicode.com/cach-tinh-chat-dac-thu-cua-huong-doi-tuong-101.html
